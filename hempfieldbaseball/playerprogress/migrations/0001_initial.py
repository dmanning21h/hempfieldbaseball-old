# Generated by Django 3.2.3 on 2021-05-30 19:01

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('teammanagement', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='BodyWeight',
            fields=[
                ('body_weight_id', models.AutoField(primary_key=True, serialize=False)),
                ('date', models.DateField()),
                ('weight', models.FloatField(verbose_name='Body Weight')),
                ('player', models.ForeignKey(db_column='player_id', on_delete=django.db.models.deletion.CASCADE, to='teammanagement.player', verbose_name='Player')),
            ],
            options={
                'verbose_name': 'Body Weight',
                'verbose_name_plural': 'Body Weights',
                'db_table': 'BodyWeight',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Distance',
            fields=[
                ('distance_id', models.AutoField(primary_key=True, serialize=False)),
                ('date', models.DateField()),
                ('distance', models.FloatField()),
                ('player', models.ForeignKey(db_column='player_id', on_delete=django.db.models.deletion.CASCADE, to='teammanagement.player', verbose_name='Player')),
            ],
            options={
                'db_table': 'Distance',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='DistanceType',
            fields=[
                ('distance_type_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=25)),
            ],
            options={
                'verbose_name': 'Distance Type',
                'verbose_name_plural': 'Distance Types',
                'db_table': 'DistanceType',
            },
        ),
        migrations.CreateModel(
            name='Lift',
            fields=[
                ('lift_id', models.AutoField(primary_key=True, serialize=False)),
                ('date', models.DateField()),
                ('player', models.ForeignKey(db_column='player_id', on_delete=django.db.models.deletion.CASCADE, to='teammanagement.player', verbose_name='Player')),
            ],
            options={
                'db_table': 'Lift',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='LiftSet',
            fields=[
                ('lift_set_id', models.AutoField(primary_key=True, serialize=False)),
                ('weight', models.PositiveSmallIntegerField()),
                ('reps', models.PositiveSmallIntegerField()),
            ],
            options={
                'verbose_name': 'Lift Set',
                'verbose_name_plural': 'Lift Sets',
                'db_table': 'LiftSet',
            },
        ),
        migrations.CreateModel(
            name='LiftType',
            fields=[
                ('lift_type_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=25)),
            ],
            options={
                'verbose_name': 'Lift Type',
                'verbose_name_plural': 'Lift Types',
                'db_table': 'LiftType',
            },
        ),
        migrations.CreateModel(
            name='Time',
            fields=[
                ('time_id', models.AutoField(primary_key=True, serialize=False)),
                ('date', models.DateField()),
                ('time', models.DurationField()),
                ('player', models.ForeignKey(db_column='player_id', on_delete=django.db.models.deletion.CASCADE, to='teammanagement.player', verbose_name='Player')),
            ],
            options={
                'db_table': 'Time',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='TimeType',
            fields=[
                ('time_type_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=25)),
            ],
            options={
                'verbose_name': 'Time Type',
                'verbose_name_plural': 'Time Types',
                'db_table': 'TimeType',
            },
        ),
        migrations.CreateModel(
            name='Velocity',
            fields=[
                ('velocity_id', models.AutoField(primary_key=True, serialize=False)),
                ('date', models.DateField()),
                ('velocity', models.PositiveSmallIntegerField()),
                ('player', models.ForeignKey(db_column='player_id', on_delete=django.db.models.deletion.CASCADE, to='teammanagement.player', verbose_name='Player')),
            ],
            options={
                'verbose_name_plural': 'Velocities',
                'db_table': 'Velocity',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='VelocityType',
            fields=[
                ('velocity_type_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=25)),
            ],
            options={
                'verbose_name': 'Velocity Type',
                'verbose_name_plural': 'Velocity Types',
                'db_table': 'VelocityType',
            },
        ),
        migrations.CreateModel(
            name='VelocityImprovement',
            fields=[
                ('velocity_improvement_id', models.AutoField(primary_key=True, serialize=False)),
                ('improvement', models.SmallIntegerField(default=0)),
                ('baseline', models.ForeignKey(db_column='baseline_velocity_id', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='baseline_velocities', to='playerprogress.velocity', verbose_name='Baseline')),
                ('latest', models.ForeignKey(db_column='latest_velocity_id', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='latest_velocities', to='playerprogress.velocity', verbose_name='Latest')),
                ('player', models.ForeignKey(db_column='player_id', on_delete=django.db.models.deletion.CASCADE, to='teammanagement.player', verbose_name='Player')),
                ('ttype', models.ForeignKey(db_column='velocity_type_id', on_delete=django.db.models.deletion.PROTECT, to='playerprogress.velocitytype', verbose_name='Velocity Type')),
            ],
            options={
                'db_table': 'VelocityImprovement',
            },
        ),
        migrations.AddField(
            model_name='velocity',
            name='ttype',
            field=models.ForeignKey(db_column='velocity_type_id', on_delete=django.db.models.deletion.PROTECT, to='playerprogress.velocitytype', verbose_name='Velocity Type'),
        ),
        migrations.CreateModel(
            name='TimeImprovement',
            fields=[
                ('time_improvement_id', models.AutoField(primary_key=True, serialize=False)),
                ('improvement', models.DurationField(default=datetime.timedelta(0))),
                ('is_seconds', models.BooleanField(default=True)),
                ('baseline', models.ForeignKey(db_column='baseline_time_id', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='baseline_times', to='playerprogress.time', verbose_name='Baseline')),
                ('latest', models.ForeignKey(db_column='latest_time_id', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='latest_times', to='playerprogress.time', verbose_name='Latest')),
                ('player', models.ForeignKey(db_column='player_id', on_delete=django.db.models.deletion.CASCADE, to='teammanagement.player', verbose_name='Player')),
                ('ttype', models.ForeignKey(db_column='time_type_id', on_delete=django.db.models.deletion.PROTECT, to='playerprogress.timetype', verbose_name='Time Type')),
            ],
            options={
                'db_table': 'TimeImprovement',
            },
        ),
        migrations.AddField(
            model_name='time',
            name='ttype',
            field=models.ForeignKey(db_column='time_type_id', on_delete=django.db.models.deletion.PROTECT, to='playerprogress.timetype', verbose_name='Time Type'),
        ),
        migrations.CreateModel(
            name='StrengthIncrement',
            fields=[
                ('increment_id', models.AutoField(primary_key=True, serialize=False)),
                ('strength_points', models.FloatField(verbose_name='Strength Points')),
                ('lift_set', models.ForeignKey(db_column='lift_set_id', on_delete=django.db.models.deletion.PROTECT, to='playerprogress.liftset', verbose_name='Set Weight x Reps')),
                ('lift_type', models.ForeignKey(db_column='lift_type_id', on_delete=django.db.models.deletion.PROTECT, to='playerprogress.lifttype', verbose_name='Lift Type')),
            ],
            options={
                'verbose_name': 'Lift Strength Increment',
                'verbose_name_plural': 'Lift Strength Increments',
                'db_table': 'StrengthIncrement',
            },
        ),
        migrations.CreateModel(
            name='LiftImprovement',
            fields=[
                ('lift_improvement_id', models.AutoField(primary_key=True, serialize=False)),
                ('improvement', models.FloatField(default=0)),
                ('baseline', models.ForeignKey(db_column='baseline_lift_id', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='baseline_lifts', to='playerprogress.lift', verbose_name='Baseline')),
                ('latest', models.ForeignKey(db_column='latest_lift_id', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='latest_lifts', to='playerprogress.lift', verbose_name='Latest')),
                ('player', models.ForeignKey(db_column='player_id', on_delete=django.db.models.deletion.CASCADE, to='teammanagement.player', verbose_name='Player')),
                ('ttype', models.ForeignKey(db_column='lift_type_id', on_delete=django.db.models.deletion.PROTECT, to='playerprogress.lifttype', verbose_name='Lift Type')),
            ],
            options={
                'db_table': 'LiftImprovement',
            },
        ),
        migrations.AddField(
            model_name='lift',
            name='set1',
            field=models.ForeignKey(db_column='set1_id', on_delete=django.db.models.deletion.PROTECT, related_name='set1_lifts', to='playerprogress.liftset', verbose_name='Set 1'),
        ),
        migrations.AddField(
            model_name='lift',
            name='set2',
            field=models.ForeignKey(db_column='set2_id', on_delete=django.db.models.deletion.PROTECT, related_name='set2_lifts', to='playerprogress.liftset', verbose_name='Set 2'),
        ),
        migrations.AddField(
            model_name='lift',
            name='set3',
            field=models.ForeignKey(db_column='set3_id', on_delete=django.db.models.deletion.PROTECT, related_name='set3_lifts', to='playerprogress.liftset', verbose_name='Set 3'),
        ),
        migrations.AddField(
            model_name='lift',
            name='ttype',
            field=models.ForeignKey(db_column='lift_type_id', on_delete=django.db.models.deletion.PROTECT, to='playerprogress.lifttype', verbose_name='Lift Type'),
        ),
        migrations.CreateModel(
            name='DistanceImprovement',
            fields=[
                ('distance_improvement_id', models.AutoField(primary_key=True, serialize=False)),
                ('improvement', models.FloatField(default=0)),
                ('baseline', models.ForeignKey(db_column='baseline_distance_id', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='baseline_distances', to='playerprogress.distance', verbose_name='Baseline')),
                ('latest', models.ForeignKey(db_column='latest_distance_id', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='latest_distances', to='playerprogress.distance', verbose_name='Latest')),
                ('player', models.ForeignKey(db_column='player_id', on_delete=django.db.models.deletion.CASCADE, to='teammanagement.player', verbose_name='Player')),
                ('ttype', models.ForeignKey(db_column='distance_type_id', on_delete=django.db.models.deletion.PROTECT, to='playerprogress.distancetype', verbose_name='Distance Type')),
            ],
            options={
                'db_table': 'DistanceImprovement',
            },
        ),
        migrations.AddField(
            model_name='distance',
            name='ttype',
            field=models.ForeignKey(db_column='distance_type_id', on_delete=django.db.models.deletion.PROTECT, to='playerprogress.distancetype', verbose_name='Distance Type'),
        ),
        migrations.CreateModel(
            name='BodyWeightImprovement',
            fields=[
                ('body_weight_improvement_id', models.AutoField(primary_key=True, serialize=False)),
                ('improvement', models.FloatField(default=0)),
                ('baseline', models.ForeignKey(db_column='baseline_body_weight_id', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='baseline_body_weights', to='playerprogress.bodyweight', verbose_name='Baseline')),
                ('latest', models.ForeignKey(db_column='latest_body_weight_id', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='latest_body_weights', to='playerprogress.bodyweight', verbose_name='Latest')),
                ('player', models.ForeignKey(db_column='player_id', on_delete=django.db.models.deletion.CASCADE, to='teammanagement.player', verbose_name='Player')),
            ],
            options={
                'db_table': 'BodyWeightImprovement',
            },
        ),
    ]
